Icinga Installation Instructions
--------------------------------

Tip: Instead of compiling sources, check if your distribution
provides Icinga packages. Such will make your upgrade life
easier :-)
https://www.icinga.org/download/packages/

A quickstart installation guide can now be found in the HTML
documentation.  You can find the quickstart guides
in the following subdirectory:

	html/docs/

The quickstart guides cover all the basic steps you need to follow
to install Icinga, the Icinga plugins, and start out monitoring
the machine that Icinga is installed on.


Get online on https://www.icinga.org and find the following as well

* Docs, by version or latest, as well as PDFs
http://docs.icinga.org

* Wiki, user contributed howtos, test & debug hints, package installs
https://wiki.icinga.org

If you happen to have questions on the install, you can get onto the
various community support channels: https://www.icinga.org/support/

Good luck! :-)


Building Release Tarballs
-------------------------

In order to build a release tarball you should first check out the Git repository
in a new directory. If you're using an existing check-out you should make sure
that there are no local modifications:

$ git status

Here's a short check-list for releases:

* Update the .mailmap and AUTHORS files
    $ git log --use-mailmap | grep ^Author: | cut -f2- -d' ' | sort | uniq > AUTHORS
* Bump the version in icinga.spec.
* Update the current version (and db schema, if required)
    $ ./update-version 1.12.1
    $ ./update-version-schema 1.12.1
* Update the Changelog and generate the docs
    $ ./configure; make create-docs
* Commit these changes to the "next" branch and create a signed tag (tags/v<VERSION>).
    $ git commit -v -a -m "Release version <VERSION>"
    $ git tag -u D14A1F16 -m "Version <VERSION>" v<VERSION>
    $ git push --tags
* Merge the "next" branch into the "master" branch (using --ff-only).
    $ git checkout master
    $ git merge --ff-only next
    $ git push origin master
* Bump the version to "v<NEXT-VERSION>-dev" and commit this change to the "next" branch.

Use "git archive" to build the release tarball:

$ VERSION=1.12.1
$ git archive --format=tar --prefix=icinga-$VERSION/ tags/v$VERSION | gzip >icinga-$VERSION.tar.gz

Finally you should verify that the tarball only contains the files it should contain:

$ VERSION=1.12.1
$ tar ztf icinga-$VERSION.tar.gz | less


